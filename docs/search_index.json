[["1-import.html", "1 Importación de datos 1.1 Datos de sanidad 1.2 Datos de cosecha", " 1 Importación de datos pacman::p_load(tidyverse, googlesheets4, googledrive) gs4_auth(email = &quot;edwardsmolina@gmail.com&quot;) googledrive::drive_auth(email = &quot;edwardsmolina@gmail.com&quot;) nova_tr &lt;- gs4_get(gs4_find(&quot;NOVA_trigo_2020&quot;)$id) # nova_tr %&gt;% sheet_names() # gs4_browse(nova_tr) pacman::p_load(tidyverse) load(&quot;data/nova_trigo.Rdata&quot;) 1.1 Datos de sanidad Interesante que se trata de un dataset con 2 filas de encabezados La primer fila es una inclusión extra para faciltar el proceso. Fila 2 y 3 contienen la info de nuestro interés, y debemos fusionar. data_head &lt;- read_sheet(nova_tr, sheet=&quot;full&quot;, n_max = 2) new_names &lt;- data_head %&gt;% t() %&gt;% as_tibble() %&gt;% unite(., col = &quot;name&quot;, V1, V2, na.rm=TRUE, sep = &quot;_&quot;) %&gt;% pull(name) Luego, leemos el cuerpo del dataset, pero indicamos los nuevos nombres dat_full &lt;- read_sheet(nova_tr, sheet=&quot;full&quot;, skip = 3, col_names = new_names) Verificamos la presión de enfermedades (% incidencia en los testigos) dat_full %&gt;% filter(trt == 1) %&gt;% group_by(dias) %&gt;% summarise(across(c(&quot;verdor&quot;, matches(&quot;inc&quot;)), ~ mean(.x, na.rm = TRUE))) %&gt;% drop_na() ## # A tibble: 4 x 7 ## dias verdor inc_e1 inc_e2 inc_e3 inc_e4 inc_e5 ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 0 100 4.44 62.2 0 0 0 ## 2 10 100 1.70 72.3 0 0 0 ## 3 19 80.2 4.96 75.0 0 0 0 ## 4 31 50.5 5.42 69.6 0 0 0 La incidencia de e1 es baja a lo largo del periodo de evaluación, por lo tanto no la incluimos en el análisis posterior. dat &lt;- dat_full %&gt;% filter(!trt == 16)%&gt;% mutate(fecha = lubridate::ymd(fecha))%&gt;% drop_na(fecha) %&gt;% dplyr::select(id:verdor, matches(&quot;e2&quot;), -contains(&quot;ABC&quot;)) %&gt;% dplyr::select(-matches(&quot;sev&quot;)) %&gt;% mutate(af_sana = verdor - int_e2) # dat %&gt;% view 1.2 Datos de cosecha cosecha &lt;- read_sheet(nova_tr, sheet=&quot;cosecha&quot;) %&gt;% mutate_at(vars(trt,bk), as.factor) cosecha Mapa de parcelas ggplot()+ geom_point(aes(x = 1:16, y = rep(4.5,16)), size=0.1) + scale_x_continuous(breaks=scales::pretty_breaks(n = 16)) + scale_y_continuous(breaks=scales::pretty_breaks(n = 4)) + cowplot::theme_minimal_grid()+ # geom_hline(yintercept = 4.5)+ # geom_segment(aes(x=4.5, y=4.5, xend=4.5, yend=4.5), linetype = &quot;dashed&quot;, size =0.3) + # geom_segment(aes(x=8.5, y=4.5, xend=8.5, yend=7.5), linetype = &quot;dashed&quot;, size =0.3) + # geom_segment(aes(x=12.5, y=4.5, xend=12.5, yend=7.5), linetype = &quot;dashed&quot;, size =0.3)+ viridis::scale_fill_viridis(discrete=FALSE, direction = -1)+ labs(x=&quot;col&quot;, y=&quot;fila&quot;, fill = &quot;Rendimiento\\n(kg/ha)&quot;)+ geom_tile(data = cosecha, aes(col, fila, fill= kg_ha), alpha =0.9) + geom_hline(yintercept = 2.5, linetype = &quot;dashed&quot;)+ geom_segment(aes(x=8.5, y=0.5, xend=8.5, yend=4.5), linetype = &quot;dashed&quot;, size =0.8) + geom_text(data = cosecha, aes(x = col, fila, label = paste(trt, &quot;\\n&quot;, round(plot,1), &quot;&quot;)), col = &quot;white&quot;, size = 3) # ggsave(last_plot(), file = &quot;plots/mapa_parcelas.png&quot;, w=6.5, h=7) # dat %&gt;% write_sheet(ss=nova_ceb, sheet = &quot;clean&quot;) save(dat_full, dat, cosecha, file = &quot;data/nova_trigo.Rdata&quot;) "]]
